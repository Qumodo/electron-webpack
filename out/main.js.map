{"version":3,"file":"main.js","sourceRoot":"","sources":["../src/main.ts"],"names":[],"mappings":"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","sourcesContent":["import BluebirdPromise from \"bluebird-lst\"\nimport { readJson } from \"fs-extra-p\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\nimport { getConfig, validateConfig } from \"read-config-file\"\nimport { deepAssign } from \"read-config-file/out/deepAssign\"\nimport \"source-map-support/register\"\nimport { Configuration, Plugin, Rule } from \"webpack\"\nimport merge from \"webpack-merge\"\nimport { configureTypescript } from \"./configurators/ts\"\nimport { configureVue } from \"./configurators/vue/vue\"\nimport { ConfigurationEnv, ConfigurationType, ElectronWebpackConfiguration, PackageMetadata, PartConfiguration } from \"./core\"\nimport { BaseTarget } from \"./targets/BaseTarget\"\nimport { MainTarget } from \"./targets/MainTarget\"\nimport { BaseRendererTarget, RendererTarget } from \"./targets/RendererTarget\"\nimport { getFirstExistingFile, orNullIfFileNotExist } from \"./util\"\n\nexport { ElectronWebpackConfiguration } from \"./core\"\n\nconst _debug = require(\"debug\")\n\n// noinspection JSUnusedGlobalSymbols\nexport function getAppConfiguration(env: ConfigurationEnv) {\n  return BluebirdPromise.filter([configure(\"main\", env), configure(\"renderer\", env)], it => it != null)\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport function getMainConfiguration(env: ConfigurationEnv) {\n  return configure(\"main\", env)\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport function getRendererConfiguration(env: ConfigurationEnv) {\n  return configure(\"renderer\", env)\n}\n\n// in the future, if need, isRenderer = true arg can be added\n// noinspection JSUnusedGlobalSymbols\nexport function getDllConfiguration(env: ConfigurationEnv) {\n  return configure(\"renderer-dll\", env)\n}\n\n// noinspection JSUnusedGlobalSymbols\nexport async function getTestConfiguration(env: ConfigurationEnv) {\n  const configurator = await createConfigurator(\"test\", env)\n  return await configurator.configure({\n    testComponents: path.join(process.cwd(), \"src/renderer/components/testComponents.ts\"),\n  })\n}\n\nexport class WebpackConfigurator {\n  readonly projectDir: string\n\n  private electronVersionPromise = new Lazy(() => getInstalledElectronVersion(this.projectDir))\n\n  readonly isRenderer: boolean\n  readonly isProduction: boolean\n  readonly isTest = this.type === \"test\"\n\n  readonly sourceDir: string\n  readonly commonSourceDirectory: string\n\n  readonly debug = _debug(`electron-webpack:${this.type}`)\n\n  private _configuration: Configuration | null = null\n\n  get config(): Configuration {\n    return this._configuration!!\n  }\n\n  readonly rules: Array<Rule> = []\n  readonly plugins: Array<Plugin> = []\n\n  // js must be first - e.g. iview has two files loading-bar.js and loading-bar.vue - when we require \"loading-bar\", js file must be resolved and not vue\n  readonly extensions: Array<string> = [\".js\", \".json\", \".node\"]\n\n  private _electronVersion: string | null = null\n\n  get electronVersion(): string {\n    return this._electronVersion!!\n  }\n\n  readonly entryFiles: Array<string> = []\n\n  constructor(readonly type: ConfigurationType, readonly env: ConfigurationEnv, readonly electronWebpackConfiguration: ElectronWebpackConfiguration, readonly metadata: PackageMetadata) {\n    if (electronWebpackConfiguration.renderer === undefined) {\n      electronWebpackConfiguration.renderer = {}\n    }\n    if (electronWebpackConfiguration.main === undefined) {\n      electronWebpackConfiguration.main = {}\n    }\n\n    if (metadata.dependencies == null) {\n      metadata.dependencies = {}\n    }\n    if (metadata.devDependencies == null) {\n      metadata.devDependencies = {}\n    }\n\n    this.projectDir = electronWebpackConfiguration.projectDir || process.cwd()\n    this.isRenderer = type.startsWith(\"renderer\")\n    process.env.BABEL_ENV = type\n\n    this.isProduction = this.env.production == null ? process.env.NODE_ENV === \"production\" : this.env.production\n\n    this.debug(`isProduction: ${this.isProduction}`)\n\n    this.sourceDir = this.getSourceDirectory(this.type)!!\n\n    const commonSourceDirectory = this.electronWebpackConfiguration.commonSourceDirectory\n    this.commonSourceDirectory = commonSourceDirectory == null ? path.join(this.projectDir, \"src\", \"common\") : path.resolve(this.projectDir, commonSourceDirectory)\n  }\n\n  /**\n   * Returns null if code processing for type is disabled.\n   */\n  getSourceDirectory(type: ConfigurationType): string | null {\n    const part = this.getPartConfiguration(type)\n    if (part === null || (part != null && part.sourceDirectory === null)) {\n      // part or sourceDirectory is explicitly set to null\n      return null\n    }\n\n    const result = part == null ? null : part.sourceDirectory\n    if (result == null) {\n      return path.join(this.projectDir, \"src\", type.startsWith(\"renderer\") || type === \"test\" ? \"renderer\" : type)\n    }\n    else {\n      return path.resolve(this.projectDir, result)\n    }\n  }\n\n  getPartConfiguration(type: ConfigurationType): PartConfiguration | null | undefined {\n    if (type === \"main\") {\n      return this.electronWebpackConfiguration.main\n    }\n    else {\n      return this.electronWebpackConfiguration.renderer\n    }\n  }\n\n  get commonDistDirectory() {\n    return path.join(this.projectDir, \"dist\")\n  }\n\n  hasDependency(name: string) {\n    return name in this.metadata.dependencies || this.hasDevDependency(name)\n  }\n\n  hasDevDependency(name: string) {\n    return name in this.metadata.devDependencies\n  }\n\n  /**\n   * Returns the names of devDependencies that match a given string or regex.\n   * If no matching dependencies are found, an empty array is returned.\n   *\n   * @return list of matching dependency names, e.g. `['babel-preset-react', 'babel-preset-stage-0']`\n   */\n  getMatchingDevDependencies(options: GetMatchingDevDependenciesOptions = {}) {\n    const includes = options.includes || []\n    const excludes = new Set(options.excludes || [])\n    return Object.keys(this.metadata.devDependencies)\n      .filter(name => !excludes.has(name) && includes.some(prefix => name.startsWith(prefix)))\n  }\n\n  async configure(entry?: { [key: string]: any } | null) {\n    this._configuration = {\n      context: this.projectDir,\n      devtool: this.isProduction || this.isTest ? \"nosources-source-map\" : \"eval-source-map\",\n      externals: this.computeExternals(),\n      node: {\n        __dirname: !this.isProduction,\n        __filename: !this.isProduction,\n      },\n      output: {\n        filename: \"[name].js\",\n        chunkFilename: \"[name].bundle.js\",\n        libraryTarget: \"commonjs2\",\n        path: path.join(this.commonDistDirectory, this.type)\n      },\n      target: this.isTest ? \"node\" : `electron-${this.type === \"renderer-dll\" ? \"renderer\" : this.type}` as any,\n      resolve: {\n        alias: {\n          \"@\": this.sourceDir,\n          common: this.commonSourceDirectory,\n        },\n        extensions: this.extensions,\n      },\n      module: {\n        rules: this.rules,\n      },\n      plugins: this.plugins,\n    }\n\n    if (entry != null) {\n      this._configuration.entry = entry\n    }\n\n    // if electronVersion not specified, use latest\n    this._electronVersion = this.electronWebpackConfiguration.electronVersion || await this.electronVersionPromise.value || \"1.8.2\"\n    const target = (() => {\n      switch (this.type) {\n        case \"renderer\": return new RendererTarget()\n        case \"renderer-dll\": return new BaseRendererTarget()\n        case \"test\": return new BaseRendererTarget()\n        case \"main\": return new MainTarget()\n        default: return new BaseTarget()\n      }\n    })()\n    this.debug(`Target class: ${target.constructor.name}`)\n    target.configureRules(this)\n    await Promise.all([target.configurePlugins(this), configureTypescript(this)])\n    configureVue(this)\n\n    if (this.debug.enabled) {\n      this.debug(`\\n\\n${this.type} config:` + JSON.stringify(this._configuration, null, 2) + \"\\n\\n\")\n    }\n\n    if (this.config.entry == null) {\n      this.entryFiles.push((await computeEntryFile(this.sourceDir, this.projectDir))!!)\n      this.config.entry = {\n        [this.type]: this.entryFiles,\n      }\n\n      const mainConfiguration = this.electronWebpackConfiguration.main || {}\n      let extraEntries = mainConfiguration.extraEntries\n      if (this.type === \"main\" && extraEntries != null) {\n        if (typeof extraEntries === \"string\") {\n          extraEntries = [extraEntries]\n        }\n\n        if (Array.isArray(extraEntries)) {\n          for (const p of extraEntries) {\n            this.config.entry[path.basename(p, path.extname(p))] = p\n          }\n        }\n        else {\n          Object.assign(this.config.entry, extraEntries)\n        }\n      }\n    }\n\n    this.applyCustomModifications()\n\n    return this.config\n  }\n\n  private applyCustomModifications() {\n    if (this.type === \"renderer\" && this.electronWebpackConfiguration.renderer && this.electronWebpackConfiguration.renderer.webpackConfig) {\n      this._configuration = merge.smart(this._configuration!!, require(path.join(this.projectDir, this.electronWebpackConfiguration.renderer.webpackConfig)))\n    }\n\n    if (this.type === \"renderer-dll\" && this.electronWebpackConfiguration.renderer && this.electronWebpackConfiguration.renderer.webpackDllConfig) {\n      this._configuration = merge.smart(this._configuration!!, require(path.join(this.projectDir, this.electronWebpackConfiguration.renderer.webpackDllConfig)))\n    }\n\n    if (this.type === \"main\" && this.electronWebpackConfiguration.main && this.electronWebpackConfiguration.main.webpackConfig) {\n      this._configuration = merge.smart(this._configuration!!, require(path.join(this.projectDir, this.electronWebpackConfiguration.main.webpackConfig)))\n    }\n  }\n\n  private computeExternals() {\n    const whiteListedModules = new Set(this.electronWebpackConfiguration.whiteListedModules || [])\n    if (this.isRenderer) {\n      whiteListedModules.add(\"vue\")\n    }\n\n    const filter = (name: string) => !name.startsWith(\"@types/\") && (whiteListedModules == null || !whiteListedModules.has(name))\n    const externals: Array<string> = Object.keys(this.metadata.dependencies).filter(filter)\n    externals.push(\"electron\")\n    externals.push(\"webpack\")\n    // because electron-devtools-installer specified in the devDependencies, but required in the index.dev\n    externals.push(\"electron-devtools-installer\")\n    if (this.type === \"main\") {\n      externals.push(\"webpack/hot/log-apply-result\")\n      externals.push(\"electron-webpack/out/electron-main-hmr/HmrClient\")\n      externals.push(\"source-map-support/source-map-support.js\")\n    }\n\n    if (this.electronWebpackConfiguration.externals != null) {\n      return externals.concat(this.electronWebpackConfiguration.externals)\n    }\n\n    return externals\n  }\n}\n\nconst schemeDataPromise = new Lazy(() => readJson(path.join(__dirname, \"..\", \"scheme.json\")))\n\nexport async function createConfigurator(type: ConfigurationType, env: ConfigurationEnv | null) {\n  if (env != null) {\n    // allow to pass as `--env.autoClean=false` webpack arg\n    const _env: any = env\n    for (const name of [\"minify\", \"autoClean\", \"production\"]) {\n      if (_env[name] === \"true\") {\n        _env[name] = true\n      }\n      else if (_env[name] === \"false\") {\n        _env[name] = false\n      }\n    }\n  }\n\n  if (env == null) {\n     env = {}\n   }\n\n  const projectDir = (env.configuration || {}).projectDir || process.cwd()\n  const packageMetadata = await orNullIfFileNotExist(readJson(path.join(projectDir, \"package.json\")))\n  const electronWebpackConfig = ((await getConfig({\n    packageKey: \"electronWebpack\",\n    configFilename: \"electron-webpack\",\n    projectDir,\n    packageMetadata: new Lazy(() => Promise.resolve(packageMetadata))\n  })) || {} as any).result || {}\n  if (env.configuration != null) {\n    deepAssign(electronWebpackConfig, env.configuration)\n  }\n\n  await validateConfig(electronWebpackConfig, schemeDataPromise, message => {\n    return `${message}\n\nHow to fix:\n1. Open https://webpack.electron.build/options\n2. Search the option name on the page.\n  * Not found? The option was deprecated or not exists (check spelling).\n  * Found? Check that the option in the appropriate place. e.g. \"sourceDirectory\" only in the \"main\" or \"renderer\", not in the root.\n`\n  })\n  return new WebpackConfigurator(type, env, electronWebpackConfig, packageMetadata)\n}\n\nexport async function configure(type: ConfigurationType, env: ConfigurationEnv | null): Promise<Configuration | null> {\n  const configurator = await createConfigurator(type, env)\n  const sourceDir = configurator.sourceDir\n  // explicitly set to null - do not handle at all and do not show info message\n  if (sourceDir === null) {\n    return null\n  }\n  else {\n    return await configurator.configure()\n  }\n}\n\nasync function computeEntryFile(srcDir: string, projectDir: string): Promise<string | null> {\n  const candidates: Array<string> = []\n  for (const ext of [\"ts\", \"js\", \"tsx\"]) {\n    for (const name of [\"index\", \"main\", \"app\"]) {\n      candidates.push(`${name}.${ext}`)\n    }\n  }\n\n  const file = await getFirstExistingFile(candidates, srcDir)\n  if (file == null) {\n    throw new Error(`Cannot find entry file ${path.relative(projectDir, path.join(srcDir, \"index.ts\"))} (or main.ts, or app.ts, or index.js, or main.js, or app.js)`)\n  }\n  return file\n}\n\nasync function getInstalledElectronVersion(projectDir: string) {\n  for (const name of [\"electron\", \"electron-prebuilt\", \"electron-prebuilt-compile\"]) {\n    try {\n      return (await readJson(path.join(projectDir, \"node_modules\", name, \"package.json\"))).version\n    }\n    catch (e) {\n      if (e.code !== \"ENOENT\") {\n        throw e\n      }\n    }\n  }\n}\n\nexport interface GetMatchingDevDependenciesOptions {\n  /**\n   * The list of prefixes to include, e.g. `[\"babel-preset-\"]`.\n   */\n  includes?: Array<string>\n  /**\n   * The list of names to exclude.\n   */\n  excludes?: Array<string>\n}\n"]}
