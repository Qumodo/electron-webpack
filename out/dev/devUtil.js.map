{"version":3,"file":"devUtil.js","sourceRoot":"","sources":["../../src/dev/devUtil.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from \"chalk\"\nimport { ChildProcess } from \"child_process\"\n\nexport interface LineFilter {\n  filter(line: string): boolean\n}\n\nfunction filterText(s: string, lineFilter: LineFilter | null) {\n  const lines = s\n    .trim()\n    .split(/\\r?\\n/)\n    .filter(it => {\n      if (lineFilter != null && !lineFilter.filter(it)) {\n        return false\n      }\n\n      // https://github.com/electron/electron/issues/4420\n      // this warning can be safely ignored\n      if (it.includes(\"Couldn't set selectedTextBackgroundColor from default ()\")) {\n        return false\n      }\n      if (it.includes(\"Use NSWindow's -titlebarAppearsTransparent=YES instead.\")) {\n        return false\n      }\n      return !it.includes(\"Warning: This is an experimental feature and could change at any time.\")\n        && !it.includes(\"No type errors found\")\n        && !it.includes(\"webpack: Compiled successfully.\")\n    })\n\n  if (lines.length === 0) {\n    return null\n  }\n  return \"  \" + lines.join(`\\n  `) + \"\\n\"\n}\n\nexport function logProcessErrorOutput(label: \"Electron\" | \"Renderer\" | \"Main\", childProcess: ChildProcess) {\n  childProcess.stderr.on(\"data\", data => {\n    logProcess(label, data.toString(), chalk.red)\n  })\n}\n\nexport function logError(label: \"Electron\" | \"Renderer\" | \"Main\", error: Error) {\n  logProcess(label, error.stack || error.toString(), chalk.red)\n}\n\nconst LABEL_LENGTH = 28\n\nexport function logProcess(label: \"Electron\" | \"Renderer\" | \"Main\", data: string | Buffer, labelColor: any, lineFilter: LineFilter | null = null) {\n  const log = filterText(data.toString(), lineFilter)\n  if (log == null || log.length === 0) {\n    return\n  }\n\n  process.stdout.write(\n    labelColor.bold(`┏ ${label} ${\"-\".repeat(LABEL_LENGTH - label.length - 1)}`) +\n    \"\\n\\n\" + log + \"\\n\" +\n    labelColor.bold(`┗ ${\"-\".repeat(LABEL_LENGTH)}`) +\n    \"\\n\"\n  )\n}\n\nexport class DelayedFunction {\n  private readonly executor: () => void\n  private handle: NodeJS.Timer | null = null\n\n  constructor(executor: () => void) {\n    this.executor = () => {\n      this.handle = null\n      executor()\n    }\n  }\n\n  schedule() {\n    this.cancel()\n    this.handle = setTimeout(this.executor, 5000)\n  }\n\n  cancel() {\n    const handle = this.handle\n    if (handle != null) {\n      this.handle = null\n      clearTimeout(handle)\n    }\n  }\n}\n\nexport function getCommonEnv() {\n  return {\n    ...process.env,\n    NODE_ENV: \"development\",\n    // to force debug colors in the child process\n    DEBUG_COLORS: true,\n    DEBUG_FD: \"1\",\n  }\n}"]}
